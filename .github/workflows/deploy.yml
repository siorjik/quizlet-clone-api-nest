name: Deploy to hosting

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:

jobs:
  docker-hub-deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.API_IMAGE }}:latest
          
  hosting-deploy:
    needs: docker-hub-deploy
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Deploy to hosting via SSH
        uses: appleboy/ssh-action@v1.0.0
        env:
          CHECK: 'checking variable'
        with:
          host: ${{ secrets.HOSTING }}
          username: ${{ secrets.HOSTING_USER }}
          password: ${{ secrets.HOSTING_PASS }}
          envs: CHECK
          script: |
            cd ~/projects/quizlet-clone-api-nest
            sudo docker-compose stop
            sudo docker-compose pull
            sudo env ACCESS_SECRET=${{ vars.ACCESS_SECRET }} NODE_ENV=${{ vars.NODE_ENV }} DB_URL=${{ vars.DB_URL }} CLIENT_HOST=${{ vars.CLIENT_HOST }} REFRESH_SECRET=${{ vars.REFRESH_SECRET }} \
              MONGO_INITDB_ROOT_USERNAME=${{ vars.MONGO_INITDB_ROOT_USERNAME }} MONGO_INITDB_ROOT_PASSWORD=${{ vars.MONGO_INITDB_ROOT_PASSWORD }} MONGO_INITDB_DATABASE=${{ vars.MONGO_INITDB_DATABASE }} \
              docker-compose up -d
            sudo docker image prune -f
          
